package com.autonavi.tbt;


public class TBT{
			
	/********************************************************************
	函数名称：init
	功能介绍：初始化TBT
	返 回 值：0 初始化失败，1 初始化成功
	说    明：在使用TBT接口前必须先调用此接口成功初始化TBT模块
	********************************************************************/
	public native int init(
		IFrameForTBT frame,		    // [I] TBT使用者，TBT用此对象来给使用者发消息，参见IFrameForTBT定义
		String workPath,			// [I] 工作路径，TBT的一些配置文件等资料，以及输出信息将输出到此路径下
		String usercode,			// [I] 用户码，从高德申请的到
		String userbatch,			// [I] 用户码，从高德申请的到
		String deviceID				// [I] 每个设备号必须唯一，可以是SIM卡号，也可以是设备唯一ID
		);
	
	/********************************************************************
	函数名称：destroy
	功能介绍：销毁TBT
	返 回 值：无
	说    明：系统退出时调用此接口释放TBT资源，在调用此接口后不能再调用TBT的其它接口
	********************************************************************/
	public native void destroy();

	/********************************************************************
	函数名称：receiveNetData
	功能介绍：接收网络数据
	返 回 值：无
	说    明：无
	********************************************************************/
	public native void receiveNetData(
		int connectID,	    // [I] 连接号，TBT请求时传入
		byte[] data,		// [I] 下载的数据
		int length			// [I] 数据长度
		);

	/********************************************************************
	函数名称：setNetRequestState
	功能介绍：设置网络请求状态
	返 回 值：无
	说    明：网络请求失败调用此接口通知TBT，成功时发送完数据后调用此接口通知TBT网络请求成功
		1	请求成功
		2	请求失败
		3	请求超时
		4	用户手动结束请求
	********************************************************************/
	public native void setNetRequestState(
		int connectID,	    // [I] 连接号，此ID由TBT创建在网络请求时传入
		int netState		// [I] 请求状态如上定义
		);
	
	/********************************************************************
	函数名称：setCarLocation
	功能介绍：设置自车初始位置
	返 回 值：无
	说    明：在系统初始化时，以及非TBT通知的位置变化时调用此接口通知TBT自车位置改变
	********************************************************************/
	public native void setCarLocation(
		int offFlag,				// [I] 是否有偏移，0 没偏移，1 有偏移(一般直接从GPS接收过来的位置是没偏转的，从TBT得到的位置都是偏转过的)
		double longitude, 			// [I] 自车经度
		double latitude  			// [I] 自车纬度
		);
	
	/********************************************************************
	函数名称：openTMC
	功能介绍：打开动态交通信息
	返 回 值：无
	说    明：默认动态交通信息关闭
	********************************************************************/
	public  native void openTMC();
	
	/********************************************************************
	函数名称：closeTmc
	功能介绍：关闭动态交通信息
	返 回 值：无
	说    明：关闭动态交通信息后createTMCBar与getRoadStatus接口将不能使用
	********************************************************************/
	public  native void closeTMC();
	
	/********************************************************************
	函数名称：openTrafficRadio
	功能介绍：打开移动交通台功能
	返 回 值：无
	说    明：默认为打开状态
	********************************************************************/
	public  native void openTrafficRadio();
	
	/********************************************************************
	函数名称：closeTrafficRadio
	功能介绍：关闭移动交通台功能
	返 回 值：无
	说    明：无
	********************************************************************/
	public  native void closeTrafficRadio();
	
	/********************************************************************
	函数名称：setEmulatorSpeed
	功能介绍：设置模拟导航的速度
	返 回 值：无
	说    明：无
	********************************************************************/
	public native void setEmulatorSpeed(
		int emulatorSpeed		// [I] 单位公里每小时
		);

	/********************************************************************
	函数名称：setEleyePrompt
	功能介绍：设置是否播报电子眼
	返 回 值：无
	说    明：默认播报电子眼
	********************************************************************/
	public native void setEleyePrompt(
		int eleyePrompt	   // [I] 是否播报电子眼，0 不播报电子眼，1 播报电子眼
		);

	/********************************************************************
 	函数名称：setNaviType
	功能介绍：设置导航的播报类型
	返 回 值：无
	说    明：默认为简单播报
	********************************************************************/
	public native void setNaviType(
		int naviType	// [I] 播报类型，0 简单播报，1 详细播报	
		);

	/********************************************************************
	函数名称：setPlayOneWordUseTime
	功能介绍：设置TTS播报每个字需要的时间
	返 回 值：无
	说    明：为了获得更好的播报效果，在导航前必须调用此接口来设置比较精确的值
	********************************************************************/
	public native void setPlayOneWordUseTime(
		int useTime	    // [I] 播报每个字需要的时间，单位为毫秒
		);
	
	/********************************************************************
	函数名称：startEmulatorNavi
	功能介绍：开始模拟导航
	返 回 值：0 失败， 1 成功
	说    明：如果路径策略是多路径在开始导航前必须先调用selectRoute选择使用那条路导航
	********************************************************************/
	public native int startEmulatorNavi();
	
	/********************************************************************
	函数名称：startGPSNavi
	功能介绍：开始GPS导航
	返 回 值：0 失败， 1 成功
	说    明：如果路径策略是多路径在开始导航前必须先调用selectRoute选择使用那条路导航
	********************************************************************/
	public native int startGPSNavi();

	/********************************************************************
	函数名称：stopEmulatorNavi
	功能介绍：停止模拟导航
	返 回 值：无
	说    明：无
	********************************************************************/
	public native void stopEmulatorNavi();

	/********************************************************************
	函数名称：pauseNavi
	功能介绍：暂停导航
	返 回 值：无
	说    明：无
	********************************************************************/
	public native void pauseNavi();

	/********************************************************************
	函数名称：rsumeNavi
	功能介绍：继续导航
	返 回 值：无
	说    明：无
	********************************************************************/
	public native void resumeNavi();

	/********************************************************************
	函数名称：stopNavi
	功能介绍：停止导航
	返 回 值：无
	说    明：停止导航TBT将删除路径
	********************************************************************/
	public native void stopNavi();

	/********************************************************************
	函数名称：SaveRoute
	功能介绍：保存当前道路
	返 回 值：成功返回保存ID，失败返回-1
	说    明：无
	********************************************************************/
	public native int saveRoute();

	/********************************************************************
	函数名称：RestoreRoute
	功能介绍：恢复之前保存的路径
	返 回 值：返回0：恢复失败，返回1：恢复成功
	说    明：不能在导航状态下进行路径恢复
	********************************************************************/
	public native int restoreRoute(
		int iRouteID		// [I] 路径ID，为saveRoute返回的ID号
		);

	/********************************************************************
	函数名称：DeleteSavedRoute
	功能介绍：删除备份的某条路径
	返 回 值：无
	说    明：无
	********************************************************************/
	public native void deleteSavedRoute(
		int iRouteID		// [I] 路径ID，为saveRoute返回的ID号
		);
	/********************************************************************
	函数名称：getNaviGuideList
	功能介绍：获得行程Guide列表
	返 回 值：行程列表，列表数目为导航段的个数
	说    明：无
	********************************************************************/
	public native NaviGuideItem[] getNaviGuideList();
	/********************************************************************
	函数名称：GetAllCamera
	功能介绍：获得整条路径的电子眼
	返 回 值：成功返回电子眼列表，失败返回NULL
	说    明：无
	********************************************************************/
	public native CameraPoint getAllCamera(
		);
	
	/********************************************************************
	函数名称：playNaviManual
	功能介绍：手动播报导航提示
	返 回 值：0失败，1成功
	说    明：如果正在播报导航信息，则返回失败
	********************************************************************/
	
	public native int playNaviManual();
	
	/********************************************************************
	函数名称：playTrafficRadioManual
	功能介绍：手动播报前方路况
	返 回 值：0失败，1成功
	说    明：无
	********************************************************************/
	public native int playTrafficRadioManual(
			   int iFrontDistance                 // [I] 要播报的前方路径距离，0为SDK默认距离，-1为整条路径
	);
	
	/********************************************************************
	函数名称：setGPSInfor
	功能介绍：设置GPS位置信息
	返 回 值：无
	说    明：无
	********************************************************************/
	public native void setGPSInfor(
		int iOffsetFlag,			// [I] 是否偏转标识，1无偏转，2有偏转
		double longitude,		    // [I] 经度
		double latitude,		    // [I] 纬度
		double speed,				// [I] 速度
		double direction,		    // [I] 方向（单位度）以正北为基准，顺时针增加
		int year,				    // [I] 年
		int month,					// [I] 月
		int day,					// [I] 日
		int hour,					// [I] 时
		int minute,					// [I] 分
		int second					// [I] 秒
		);
	
	/********************************************************************
	函数名称：requestRoute
	功能介绍：请求路径
	返 回 值：0失败，1成功
	说    明：请求结果通过setRequestRouteState通知Frame，CalcType定义如下
		0	速度优先（推荐道路）
		1	费用优先（尽量避开收费道路）
		2	距离优先（距离最短）
		3	普通路优先（不走快速路，包含高速路）
		4	考虑实时路况的路线（时间优先）
		5	多路径（一条速度优先路线，一条考虑实时交通路况路线）
	********************************************************************/
	public native int requestRoute(
		int calcType,				// [I] 路径类型，如上定义
		int endNum,					// [I] 终点个数
		double[] endPos			    // [I] 终点经纬度序列，最后一个点为目的地，其它为途径点
		);
	
	/********************************************************************
	函数名称：requestRouteHaveStart
	功能介绍：带起点的路径请求
	返 回 值：0失败，1成功
	说    明：用法参见requestRoute
	********************************************************************/
	public native int requestRouteHaveStart(
		int calcType,				// [I] 路径类型，参见requestRoute
		int startNum,				// [I] 起点个数
		double[] startPos,	        // [I] 起点经纬度序列
		int endNum,					// [I] 终点个数
		double[] endPos			    // [I] 终点经纬度序列，最后一个点为目的地，其它为途径点
		);

	/********************************************************************
	函数名称：reroute
	功能介绍：重新计算路径
	返 回 值：0失败，1成功
	说    明：请求结果通过setRequestRouteState通知Frame
	********************************************************************/
	public native int reroute();

	/********************************************************************
	函数名称：selectRoute
	功能介绍：选择路径
	返 回 值：返回设置状态，如下定义
	说    明：选择路径，在算路类型为5时需要使用
		1	设置成功
		2	当前只有一条道路，将唯一的路径设置成了选择路径
		3	没有要设置的道路类型，设置失败
	********************************************************************/
	public native int selectRoute(
		int routeType		// [I] 选择道路的类型，1 考虑动态路径，2 最优路径
		);
	
	/********************************************************************
	函数名称：getRouteLength
	功能介绍：获得当前路径的长度，单位米
	返 回 值：成功返回路径长度，否则返回-1
	说    明：无
	********************************************************************/
	public native int getRouteLength();
	
	/********************************************************************
	函数名称：getRouteTime
	功能介绍：获得当前路径的旅行时间，单位秒
	返 回 值：成功返回路径的旅行时间，否则返回-1
	说    明：无
	********************************************************************/
	public native int getRouteTime();
	
	/********************************************************************
	函数名称：getSegmentNum
	功能介绍：获得当前路径的导航段个数
	返 回 值：成功返回导航段个数，否则返回-1
	说    明：无
	********************************************************************/
	public native int getSegmentNum();

	/********************************************************************
	函数名称：getSegLength
	功能介绍：获得一个导航段的长度，单位米
	返 回 值：成功返回导航段的长度，否则返回-1
	说    明：无
	********************************************************************/
	public native int getSegLength(
		int segIndex		// [I] 导航段编号，从0开始编号
		);
	
	/********************************************************************
	函数名称：getSegTime
	功能介绍：获得导航段的旅行时间，单位秒
	返 回 值：成功返回导航段的旅行时间，否则返回-1
	说    明：无
	********************************************************************/
	public native int getSegTime(
		int segIndex		// [I] 导航段编号，从0开始编号
		);
	
	/********************************************************************
	函数名称：getSegLinkNum
	功能介绍：获得一个导航段中Link的数量
	返 回 值：当前iSegIndex小于总导航个数时返回Link个数，否则返回-1
	说    明：无
	********************************************************************/
	public native int getSegLinkNum(
		int segIndex		// [I] 导航段编号，从0开始编号
		);
	
	/********************************************************************
	函数名称：getSegChargeLength
	功能介绍：获得一个导航段的收费路长度
	返 回 值：成功返回导航段中收费道路的长度，否则返回-1
	说    明：无
	********************************************************************/
	public native int getSegChargeLength(
		int segIndex		// [I] 导航段编号，从0开始编号
		);

	/********************************************************************
	函数名称：getSegCoor
	功能介绍：获得一个导航段的形状点
	返 回 值：形状点列表
	说    明：无
	********************************************************************/
	 public native PointList getSegCoor(
		int segIndex		// [I] 导航段编号，从0开始编号
		);

	/********************************************************************
	函数名称：getSegLocationCodeNum
	功能介绍：获得一个导航段的LocationCode个数
	返 回 值：LocationCode个数
	说    明：无
	********************************************************************/
	public native int getSegLocationCodeNum(
		int segIndex		// [I] 导航段编号，从0开始编号
		);
	
	/********************************************************************
	函数名称：getSegLocationCode
	功能介绍：获得一个LocationCode
	返 回 值：一个LocationCode
	说    明：无
	********************************************************************/
	public native LocationCode getSegLocationCode(
		int segIndex,				// [I] 导航段编号，从0开始编号
		int locationIndex		    // [I] LocationCode编号，从0开始编号
		);

	/********************************************************************
	函数名称：getLinkRoadName
	功能介绍：获得一个Link的道路名称
	返 回 值：返回Link的名称
	说    明：无
	********************************************************************/
	public native String getLinkRoadName(
		int segIndex,		// [I] 导航段编号，从0开始编号
		int linkIndex		// [I] Link编号，从0开始编号
		);

	/********************************************************************
	函数名称：getLinkCoor
	功能介绍：获得一个Link的形状坐标点
	返 回 值：返回Link的形状点序列
	说    明：无
	********************************************************************/
	public native PointList getLinkCoor(
		int segIndex,		// [I] 导航段编号，从0开始编号
		int linkIndex		// [I] Link编号，从0开始编号
		);

	/********************************************************************
	函数名称：getLinkLength
	功能介绍：获得一个Link的长度
	返 回 值：成功返回Link的长度，否则返回-1
	说    明：无
	********************************************************************/
	public native int getLinkLength(
		int segIndex,		// [I] 导航段编号，从0开始编号
		int linkIndex		// [I] Link编号，从0开始编号
		);

	/********************************************************************
	函数名称：getLinkTime
	功能介绍：获得一个Link的旅行时间，单位秒
	返 回 值：成功返回Link的旅行时间，否则返回-1
	说    明：无
	********************************************************************/
	public native int getLinkTime(
		int segIndex,		// [I] 导航段编号，从0开始编号
		int linkIndex		// [I] Link编号，从0开始编号
		);
		
	/********************************************************************
	函数名称：getLinkFormWay
	功能介绍：获得一个Link的FormWay
	返 回 值：成功返回Link的FormWay信息，否则返回-1
	说    明：FormWay定义如下
		1	// 主路
		2	// 路口内部道路
		3	// JCT道路
		4	// 环岛
		5	// 服务区
		6	// 匝道
		7	// 辅路
		8	// 匝道与JCT
		9	// 出口
		10	// 入口
		11	// A类右转专用道
		12	// B类右转专用道
		13	// A类左转专用道
		14	// B类左转专用道
		15	// 普通道路
		16	// 左右转专用道
		56	// 服务区与匝道
		53	// 服务区与JCT
		58	// 服务区与匝道以及JCT
	********************************************************************/
	public native int getLinkFormWay(
		int segIndex,		// [I] 导航段编号，从0开始编号
		int linkIndex		// [I] Link编号，从0开始编号
		);

	/********************************************************************
	函数名称：getLinkRoadClass
	功能介绍：获得一个Link的RoadClass
	返 回 值：成功返回Link的RoadClass信息，否则返回-1
	说    明：RoadClass定义如下
		0	高速公路
		1	国道
		2	省道
		3	县道
		4	乡公路
		5	县乡村内部道路
		6	主要大街、城市快速道
		7	主要道路
		8	次要道路
		9	普通道路
		10	非导航道路
	********************************************************************/
	public native int getLinkRoadClass(
		int segIndex,	// [I] 导航段编号，从0开始编号
		int linkIndex	// [I] Link编号，从0开始编号
		);

	/********************************************************************
	函数名称：getLinkType
	功能介绍：获得一个Link的LinkType
	返 回 值：成功返回Link的LinkType信息，否则返回-1
	说    明：LinkType定义如下
		0	普通道路
		1	航道
		2	隧道
		3	桥梁
	********************************************************************/
	public native int getLinkType(
		int segIndex,		// [I] 导航段编号，从0开始编号
		int linkIndex		// [I] Link编号，从0开始编号
		);
	/********************************************************************
	函数名称：HaveTrafficLights
	功能介绍：获得一个Link上是否有红绿灯
	返 回 值：0：无红绿灯，1：有红绿灯，失败返回-1
	说    明：无
	********************************************************************/
	public native int haveTrafficLights(
		int iSegIndex,		// [I] 导航段编号，从0开始编号
		int iLinkIndex		// [I] Link编号，从0开始编号
		);
	/********************************************************************
	函数名称：createTmcBar
	功能介绍：创建一个光柱
	返 回 值：创建的图片结构
	说    明：无
	********************************************************************/
	public native TmcBar createTmcBar(
			int iStartPos,			// [I] 光柱范围在路径中的起始位置
			int iDistance			// [I] 光柱范围长度
		);

	/********************************************************************
	函数名称：getRoadStatus
	功能介绍：获得一个LocationCode的状态
	返 回 值：LocationCode的状态
	说    明：在开启TMC功能并且动态有更新后可以查询
	********************************************************************/
	public native RoadStatus getRoadStatus(
		int locationCode		// [I] 要查询道路的LocationCode
		);
}